bool possible(vector<int> &arr, int k, int m, int mid){

	int cnt = 0, noB = 0;

	for(int i=0; i<arr.size(); i++){

		if(arr[i] <= mid){

			cnt++;
		}
		else{

			noB += cnt/k;
			cnt = 0;
		}
	}
	noB += cnt/k;
	return noB >= m;
}

int roseGarden(vector<int> arr, int k, int m)
{
	// Write your code here


	if(k > arr.size()) return -1;
	int l = INT_MAX;
	int r = INT_MIN;

	for(int i = 0; i<arr.size(); i++){

		l = min(l, arr[i]);
		r = max(r, arr[i]);
	}


	// binar searh on dates
	bool f = false;
	while(l <= r){

		int mid = (l+r)/2;

		if(possible(arr, k, m, mid)){
			f = true;
			r = mid-1;
		}

		else l = mid+1;
	}

	if(f) return l;
	return -1;
}
